{"ast":null,"code":"var _jsxFileName = \"/home/akashkhalse/Music/React Interview/shipment/src/Shipment Data/Shipmentdata.js\";\nimport React from 'react';\nimport ShipmentTable from '../Shipment Table/ShipmentTable';\nimport * as _ from 'lodash';\n\nclass Shipment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allShipmentdata = [];\n    this.filteredData = [];\n    this.state = {\n      shipment_data: []\n    };\n  }\n\n  componentDidMount() {\n    this.getShipmentData();\n  } // shouldComponentUpdate(){\n  // }\n\n\n  componentDidUpdate() {}\n\n  getShipmentData() {\n    fetch('http://localhost:3000/shipments').then(res => res.json()).then(result => {\n      this.allShipmentdata = result;\n      this.filteredData = result;\n      this.setState({\n        shipment_data: result\n      });\n      console.log(this.state.shipment_data);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  manipulatePage(type) {\n    if (type === 'size') {\n      if (this.refs.pageSize.value) {\n        console.log(this.refs.pageSize.value);\n\n        let chunkedArray = _.chunk(this.allShipmentdata, this.refs.pageSize.value);\n\n        console.log(chunkedArray);\n        this.setState({\n          shipment_data: chunkedArray\n        });\n      } else alert('Please Enter Page Size...');\n    } else if (type === 'sort') {\n      if (this.refs.sort_select.value) {\n        let sortedData = _.sortBy(this.allShipmentdata, this.refs.sort_select.value);\n\n        this.setState({\n          shipment_data: sortedData\n        });\n      }\n    } else if (type === 'search') {\n      if (this.refs.search_data.value) {\n        let searchData = this.allShipmentdata.map(m => {\n          if (!_.isEmpty(m) && JSON.stringify(m).indexOf(this.refs.search_data.value) > -1) return m;else return null;\n        });\n        this.setState({\n          shipment_data: searchData\n        });\n        console.log(searchData);\n      }\n    } else if (type === 'reset') {\n      console.log('reseting...');\n      this.setState({\n        shipment_data: this.allShipmentdata\n      });\n    } else {\n      if (this.refs.pageNo.value) {\n        console.log(this.refs.pageNo.value);\n      } else alert('Please enter Page No....');\n    }\n  }\n\n  render() {\n    if (!this.state.shipment_data.length) return null;else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Shipment Data...!!\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textbox\",\n      placeholder: \"Enter Page No\",\n      ref: \"pageNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.manipulatePage('no'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, \"Go to Page\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textbox\",\n      placeholder: \"Enter Page Size\",\n      ref: \"pageSize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.manipulatePage('size'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \"Go to Page\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textbox\",\n      name: \"search\",\n      placeholder: \"Enter data to search\",\n      ref: \"search_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.manipulatePage('search'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.manipulatePage('reset'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, \"Reset Search\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"sort_select\",\n      id: \"sort_select\",\n      ref: \"sort_select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"Mode\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"origin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, \"Origin\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"destination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, \"Destination\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.manipulatePage('sort'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \"Sort By\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ShipmentTable, {\n      ship_data: this.state.shipment_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nexport default Shipment;","map":{"version":3,"sources":["/home/akashkhalse/Music/React Interview/shipment/src/Shipment Data/Shipmentdata.js"],"names":["React","ShipmentTable","_","Shipment","Component","constructor","props","allShipmentdata","filteredData","state","shipment_data","componentDidMount","getShipmentData","componentDidUpdate","fetch","then","res","json","result","setState","console","log","error","manipulatePage","type","refs","pageSize","value","chunkedArray","chunk","alert","sort_select","sortedData","sortBy","search_data","searchData","map","m","isEmpty","JSON","stringify","indexOf","pageNo","render","length","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ShipmentTable from '../Shipment Table/ShipmentTable';\nimport * as _ from 'lodash';\n\nclass Shipment extends React.Component {\n\n    allShipmentdata = [];\n    filteredData = [];\n    pageNo;\n    pageSize;\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipment_data: []\n        }\n    }\n\n    componentDidMount() {\n        this.getShipmentData();\n    }\n\n    // shouldComponentUpdate(){\n\n    // }\n\n    componentDidUpdate() {\n\n    }\n\n    getShipmentData() {\n        fetch('http://localhost:3000/shipments')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.allShipmentdata = result;\n                    this.filteredData = result;\n                    this.setState({ shipment_data: result });\n                    console.log(this.state.shipment_data);\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    manipulatePage(type) {\n        if (type === 'size') {\n            if (this.refs.pageSize.value) {\n                console.log(this.refs.pageSize.value);\n                let chunkedArray = _.chunk( this.allShipmentdata , this.refs.pageSize.value);\n                console.log(chunkedArray);\n                this.setState({ shipment_data : chunkedArray })\n            } else\n                alert('Please Enter Page Size...');\n\n        } else if (type === 'sort') {\n            if (this.refs.sort_select.value) {\n                let sortedData = _.sortBy(this.allShipmentdata, this.refs.sort_select.value);\n                this.setState({ shipment_data: sortedData });\n            }\n        } else if (type === 'search') {\n            if (this.refs.search_data.value) {\n                let searchData = this.allShipmentdata.map((m) => {\n                    if (!_.isEmpty(m) && JSON.stringify(m).indexOf(this.refs.search_data.value) > -1)\n                     return m;\n                    else \n                    return null;\n                })\n                this.setState({ shipment_data: searchData });\n                console.log(searchData);\n            }\n        } else if (type === 'reset') {\n            console.log('reseting...');\n            this.setState({ shipment_data: this.allShipmentdata });\n        } else {\n            if (this.refs.pageNo.value) {\n                console.log(this.refs.pageNo.value);\n            }\n            else\n                alert('Please enter Page No....');\n        }\n    }\n\n    render() {\n        if (!this.state.shipment_data.length)\n            return null;\n        else\n            return (\n                <div>Shipment Data...!!\n                <div>\n                        <div>\n                            <input type=\"textbox\" placeholder=\"Enter Page No\" ref=\"pageNo\" />\n                            <button type=\"submit\" value=\"submit\" onClick={e => this.manipulatePage('no')}>Go to Page</button>\n                            <input type=\"textbox\" placeholder=\"Enter Page Size\" ref=\"pageSize\" />\n                            <button type=\"submit\" value=\"submit\" onClick={e => this.manipulatePage('size')}>Go to Page</button>\n                        </div>\n                        <div>\n                            <input type=\"textbox\" name=\"search\" placeholder=\"Enter data to search\" ref=\"search_data\"></input>\n                            <button type=\"submit\" value=\"submit\" onClick={e => this.manipulatePage('search')} >Search</button>\n                            <button type=\"submit\" value=\"submit\" onClick={e => this.manipulatePage('reset')}>Reset Search</button>\n                            <select name=\"sort_select\" id=\"sort_select\" ref=\"sort_select\">\n                                <option value=\"id\">ID</option>\n                                <option value=\"name\">Name</option>\n                                <option value=\"mode\">Mode</option>\n                                <option value=\"type\">Type</option>\n                                <option value=\"origin\">Origin</option>\n                                <option value=\"destination\">Destination</option>\n                            </select>\n                            <button type=\"submit\" value=\"submit\" onClick={e => this.manipulatePage('sort')} >Sort By</button>\n                        </div>\n                    </div>\n                    <div>\n                        <ShipmentTable ship_data={this.state.shipment_data}></ShipmentTable>\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport default Shipment;"]},"metadata":{},"sourceType":"module"}